{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/webcam/webcam.component.html","./src/app/webcam/webcam.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'webcam-mirror';\n}\n","<app-webcam></app-webcam>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { WebcamComponent } from './webcam/webcam.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WebcamComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"container\" [ngClass]=\"{'lights-on': lightsOn}\">\n\n    <div class=\"video-container\">\n\n        <video #videoElement class=\"video\" [ngClass]=\"{'swapped': swapped}\"></video>\n\n        <div class=\"controls\" [hidden]=\"!ready\">\n            <label>\n                <input type=\"checkbox\" name=\"swapped\" [(ngModel)]=\"swapped\">\n                Mirrored\n            </label>\n            <label>\n                <input type=\"checkbox\" name=\"lightsOn\" [(ngModel)]=\"lightsOn\">\n                Lighs on\n            </label>\n\n            <div class=\"cameras\" *ngIf=\"cameras.length > 0\">\n\n                <select [(ngModel)]=\"selectedCamera\" (change)=\"onCameraChange()\">\n                    <option *ngFor=\"let device of cameras\" [ngValue]=\"device\" [selected]=\"device === selectedCamera\">{{device.label}}</option>\n                </select>\n\n                <!--div *ngFor=\"let device of cameras\">\n                    <button [ngClass]=\"{'selected': selectedCamera === device}\" (click)=\"selectCamera(device)\">\n                        <span [textContent]=\"device.label\"></span>\n                    </button>\n                </div-->\n\n            </div>\n\n        </div>\n\n    </div>\n\n    <div class=\"video-error\" *ngIf=\"error\">\n        <span [textContent]=\"error\"></span>\n    </div>\n\n</div>","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { from } from 'rxjs';\n\n\n@Component({\n  selector: 'app-webcam',\n  templateUrl: './webcam.component.html',\n  styleUrls: ['./webcam.component.scss']\n})\nexport class WebcamComponent implements OnInit {\n\n  @ViewChild('videoElement') videoElement: any;\n  video: any;\n\n  swapped: boolean;\n  lightsOn: boolean;\n  ready: boolean;\n\n  cameras: MediaDeviceInfo[];\n  selectedCamera: MediaDeviceInfo | undefined;\n  error: string | null;\n\n  private browser = <any>navigator;\n\n  constructor() {\n\n    this.swapped = true;\n    this.lightsOn = true;\n    this.ready = false;\n\n    this.cameras = [];\n    this.error = null;\n\n    this.start();\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    this.video = this.videoElement?.nativeElement;\n  }\n\n  private async start() {\n\n    try {\n      this.cameras = await this.getCameras();    \n      if (this.cameras.length > 0) {\n        this.selectCamera(this.cameras[0]);\n      }\n    } catch (err) {\n      this.error = err;\n      throw err;\n    }\n\n  }\n\n  onCameraChange() {\n    this.selectCamera(this.selectedCamera);\n  }\n\n  private async selectCamera(deviceInfo?: MediaDeviceInfo) {\n\n    if (!deviceInfo) {\n      return;\n    }\n\n    this.selectedCamera = deviceInfo;\n    this.initCamera(this.selectedCamera.deviceId);\n  }\n\n  private async initCamera(deviceId: string) {\n\n    this.video = this.videoElement?.nativeElement;\n    if (!this.video) {\n      return;\n    }\n\n    const mediaConstraints = {\n      video: { deviceId },\n      audio: false\n    };\n\n    const stream: MediaStream = await this.browser.mediaDevices.getUserMedia(mediaConstraints);\n    this.video.srcObject = stream;\n    this.video.play();\n\n    this.ready = true;\n  }\n\n  private async getCameras() {\n\n    try {\n\n      // Need to request stream to initialize permissions\n      const mediaConstraints = { video: true, audio: false };\n      const stream = await this.browser.mediaDevices.getUserMedia(mediaConstraints);\n      console.log(\"stream\", stream);\n\n      const mediaDevices: MediaDeviceInfo[] = await this.browser.mediaDevices.enumerateDevices();\n      const videoInputDevices = mediaDevices.filter(d => d.kind === \"videoinput\");\n\n      return videoInputDevices;\n    } catch (err) {\n      this.error = err;\n      throw err;\n    }\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}